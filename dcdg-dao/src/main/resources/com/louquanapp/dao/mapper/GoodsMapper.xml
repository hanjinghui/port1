<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.louquanapp.dao.mapper.GoodsMapper">
  <resultMap id="BaseResultMap" type="com.louquanapp.dao.model.Goods">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Aug 12 16:23:35 CST 2019.
    -->
    <id column="GOODS_ID" jdbcType="CHAR" property="goodsId" />
    <result column="GOODS_TYPE" jdbcType="TINYINT" property="goodsType" />
    <result column="CAT_ID" jdbcType="CHAR" property="catId" />
    <result column="CAT_PATH" jdbcType="VARCHAR" property="catPath" />
    <result column="BRAND_ID" jdbcType="CHAR" property="brandId" />
    <result column="SHOP_ID" jdbcType="CHAR" property="shopId" />
    <result column="SUSER_ID" jdbcType="CHAR" property="suserId" />
    <result column="SUSER_NAME" jdbcType="VARCHAR" property="suserName" />
    <result column="GOODS_NAME" jdbcType="VARCHAR" property="goodsName" />
    <result column="IS_HOT" jdbcType="TINYINT" property="isHot" />
    <result column="IS_NEW" jdbcType="TINYINT" property="isNew" />
    <result column="IS_REC" jdbcType="TINYINT" property="isRec" />
    <result column="GOODS_DESC" jdbcType="VARCHAR" property="goodsDesc" />
    <result column="STOCK_COUNT" jdbcType="INTEGER" property="stockCount" />
    <result column="SALE_COUNT" jdbcType="INTEGER" property="saleCount" />
    <result column="RATE_COUNT" jdbcType="INTEGER" property="rateCount" />
    <result column="SKIM_COUNT" jdbcType="INTEGER" property="skimCount" />
    <result column="INCREASE_COUNT" jdbcType="INTEGER" property="increaseCount" />
    <result column="FAV_COUNT" jdbcType="INTEGER" property="favCount" />
    <result column="MIN_BUY" jdbcType="INTEGER" property="minBuy" />
    <result column="MAX_BUY" jdbcType="INTEGER" property="maxBuy" />
    <result column="MAX_POINT" jdbcType="DOUBLE" property="maxPoint" />
    <result column="MARKET_PRICE" jdbcType="DOUBLE" property="marketPrice" />
    <result column="PUTAWAY_PRICE" jdbcType="DOUBLE" property="putawayPrice" />
    <result column="PUTAWAY_FLAG" jdbcType="TINYINT" property="putawayFlag" />
    <result column="SKU_TYPE" jdbcType="VARCHAR" property="skuType" />
    <result column="GOODS_IMG" jdbcType="VARCHAR" property="goodsImg" />
    <result column="POINT_BACK_TYPE" jdbcType="TINYINT" property="pointBackType" />
    <result column="POINT_AMT" jdbcType="DOUBLE" property="pointAmt" />
    <result column="POST_FEE" jdbcType="DOUBLE" property="postFee" />
    <result column="POST_SECOND" jdbcType="DOUBLE" property="postSecond" />
    <result column="INSTALL_FEE" jdbcType="DOUBLE" property="installFee" />
    <result column="ADD_TIME" jdbcType="TIMESTAMP" property="addTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="SOURCE_TYPE" jdbcType="VARCHAR" property="sourceType" />
    <result column="REMARK" jdbcType="VARCHAR" property="remark" />
    <result column="AUDIT_ID" jdbcType="CHAR" property="auditId" />
    <result column="AUDIT_NAME" jdbcType="VARCHAR" property="auditName" />
    <result column="AUDIT_STATUS" jdbcType="TINYINT" property="auditStatus" />
    <result column="REFUSE_REASON" jdbcType="VARCHAR" property="refuseReason" />
    <result column="AUDIT_TIME" jdbcType="TIMESTAMP" property="auditTime" />
    <result column="IS_PROMOTION" jdbcType="TINYINT" property="isPromotion" />
    <result column="GROUP_PRICE" jdbcType="DOUBLE" property="groupPrice" />
    <result column="ADD_CART" jdbcType="TINYINT" property="addCart" />
    <result column="PAY_TYPE" jdbcType="TINYINT" property="payType" />
    <result column="PROVIDE_PRICE" jdbcType="DOUBLE" property="providePrice" />
    <result column="EARN" jdbcType="DOUBLE" property="earn" />
    <result column="GROUP_GOODS" jdbcType="VARCHAR" property="groupGoods" />
    <result column="IS_HOT_EXCHANGE" jdbcType="TINYINT" property="isHotExchange" />
    <result column="DELT_FLAG" jdbcType="TINYINT" property="deltFlag" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Aug 12 16:23:35 CST 2019.
    -->
    delete from dcdg_goods_goods_base
    where GOODS_ID = #{goodsId,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.louquanapp.dao.model.Goods">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Aug 12 16:23:35 CST 2019.
    -->
    insert into dcdg_goods_goods_base (GOODS_ID, GOODS_TYPE, CAT_ID, 
      CAT_PATH, BRAND_ID, SHOP_ID, 
      SUSER_ID, SUSER_NAME, GOODS_NAME, 
      IS_HOT, IS_NEW, IS_REC, 
      GOODS_DESC, STOCK_COUNT, SALE_COUNT, 
      RATE_COUNT, SKIM_COUNT, INCREASE_COUNT, 
      FAV_COUNT, MIN_BUY, MAX_BUY, 
      MAX_POINT, MARKET_PRICE, PUTAWAY_PRICE, 
      PUTAWAY_FLAG, SKU_TYPE, GOODS_IMG, 
      POINT_BACK_TYPE, POINT_AMT, POST_FEE, 
      POST_SECOND, INSTALL_FEE, ADD_TIME, 
      UPDATE_TIME, SOURCE_TYPE, REMARK, 
      AUDIT_ID, AUDIT_NAME, AUDIT_STATUS, 
      REFUSE_REASON, AUDIT_TIME, IS_PROMOTION, 
      GROUP_PRICE, ADD_CART, PAY_TYPE, 
      PROVIDE_PRICE, EARN, GROUP_GOODS, 
      IS_HOT_EXCHANGE, DELT_FLAG)
    values (#{goodsId,jdbcType=CHAR}, #{goodsType,jdbcType=TINYINT}, #{catId,jdbcType=CHAR}, 
      #{catPath,jdbcType=VARCHAR}, #{brandId,jdbcType=CHAR}, #{shopId,jdbcType=CHAR}, 
      #{suserId,jdbcType=CHAR}, #{suserName,jdbcType=VARCHAR}, #{goodsName,jdbcType=VARCHAR}, 
      #{isHot,jdbcType=TINYINT}, #{isNew,jdbcType=TINYINT}, #{isRec,jdbcType=TINYINT}, 
      #{goodsDesc,jdbcType=VARCHAR}, #{stockCount,jdbcType=INTEGER}, #{saleCount,jdbcType=INTEGER}, 
      #{rateCount,jdbcType=INTEGER}, #{skimCount,jdbcType=INTEGER}, #{increaseCount,jdbcType=INTEGER}, 
      #{favCount,jdbcType=INTEGER}, #{minBuy,jdbcType=INTEGER}, #{maxBuy,jdbcType=INTEGER}, 
      #{maxPoint,jdbcType=DOUBLE}, #{marketPrice,jdbcType=DOUBLE}, #{putawayPrice,jdbcType=DOUBLE}, 
      #{putawayFlag,jdbcType=TINYINT}, #{skuType,jdbcType=VARCHAR}, #{goodsImg,jdbcType=VARCHAR}, 
      #{pointBackType,jdbcType=TINYINT}, #{pointAmt,jdbcType=DOUBLE}, #{postFee,jdbcType=DOUBLE}, 
      #{postSecond,jdbcType=DOUBLE}, #{installFee,jdbcType=DOUBLE}, #{addTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{sourceType,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{auditId,jdbcType=CHAR}, #{auditName,jdbcType=VARCHAR}, #{auditStatus,jdbcType=TINYINT}, 
      #{refuseReason,jdbcType=VARCHAR}, #{auditTime,jdbcType=TIMESTAMP}, #{isPromotion,jdbcType=TINYINT}, 
      #{groupPrice,jdbcType=DOUBLE}, #{addCart,jdbcType=TINYINT}, #{payType,jdbcType=TINYINT}, 
      #{providePrice,jdbcType=DOUBLE}, #{earn,jdbcType=DOUBLE}, #{groupGoods,jdbcType=VARCHAR}, 
      #{isHotExchange,jdbcType=TINYINT}, #{deltFlag,jdbcType=TINYINT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.louquanapp.dao.model.Goods">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Aug 12 16:23:35 CST 2019.
    -->
    update dcdg_goods_goods_base
    set GOODS_TYPE = #{goodsType,jdbcType=TINYINT},
      CAT_ID = #{catId,jdbcType=CHAR},
      CAT_PATH = #{catPath,jdbcType=VARCHAR},
      BRAND_ID = #{brandId,jdbcType=CHAR},
      SHOP_ID = #{shopId,jdbcType=CHAR},
      SUSER_ID = #{suserId,jdbcType=CHAR},
      SUSER_NAME = #{suserName,jdbcType=VARCHAR},
      GOODS_NAME = #{goodsName,jdbcType=VARCHAR},
      IS_HOT = #{isHot,jdbcType=TINYINT},
      IS_NEW = #{isNew,jdbcType=TINYINT},
      IS_REC = #{isRec,jdbcType=TINYINT},
      GOODS_DESC = #{goodsDesc,jdbcType=VARCHAR},
      STOCK_COUNT = #{stockCount,jdbcType=INTEGER},
      SALE_COUNT = #{saleCount,jdbcType=INTEGER},
      RATE_COUNT = #{rateCount,jdbcType=INTEGER},
      SKIM_COUNT = #{skimCount,jdbcType=INTEGER},
      INCREASE_COUNT = #{increaseCount,jdbcType=INTEGER},
      FAV_COUNT = #{favCount,jdbcType=INTEGER},
      MIN_BUY = #{minBuy,jdbcType=INTEGER},
      MAX_BUY = #{maxBuy,jdbcType=INTEGER},
      MAX_POINT = #{maxPoint,jdbcType=DOUBLE},
      MARKET_PRICE = #{marketPrice,jdbcType=DOUBLE},
      PUTAWAY_PRICE = #{putawayPrice,jdbcType=DOUBLE},
      PUTAWAY_FLAG = #{putawayFlag,jdbcType=TINYINT},
      SKU_TYPE = #{skuType,jdbcType=VARCHAR},
      GOODS_IMG = #{goodsImg,jdbcType=VARCHAR},
      POINT_BACK_TYPE = #{pointBackType,jdbcType=TINYINT},
      POINT_AMT = #{pointAmt,jdbcType=DOUBLE},
      POST_FEE = #{postFee,jdbcType=DOUBLE},
      POST_SECOND = #{postSecond,jdbcType=DOUBLE},
      INSTALL_FEE = #{installFee,jdbcType=DOUBLE},
      ADD_TIME = #{addTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      SOURCE_TYPE = #{sourceType,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      AUDIT_ID = #{auditId,jdbcType=CHAR},
      AUDIT_NAME = #{auditName,jdbcType=VARCHAR},
      AUDIT_STATUS = #{auditStatus,jdbcType=TINYINT},
      REFUSE_REASON = #{refuseReason,jdbcType=VARCHAR},
      AUDIT_TIME = #{auditTime,jdbcType=TIMESTAMP},
      IS_PROMOTION = #{isPromotion,jdbcType=TINYINT},
      GROUP_PRICE = #{groupPrice,jdbcType=DOUBLE},
      ADD_CART = #{addCart,jdbcType=TINYINT},
      PAY_TYPE = #{payType,jdbcType=TINYINT},
      PROVIDE_PRICE = #{providePrice,jdbcType=DOUBLE},
      EARN = #{earn,jdbcType=DOUBLE},
      GROUP_GOODS = #{groupGoods,jdbcType=VARCHAR},
      IS_HOT_EXCHANGE = #{isHotExchange,jdbcType=TINYINT},
      DELT_FLAG = #{deltFlag,jdbcType=TINYINT}
    where GOODS_ID = #{goodsId,jdbcType=CHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Aug 12 16:23:35 CST 2019.
    -->
    select GOODS_ID, GOODS_TYPE, CAT_ID, CAT_PATH, BRAND_ID, SHOP_ID, SUSER_ID, SUSER_NAME, 
    GOODS_NAME, IS_HOT, IS_NEW, IS_REC, GOODS_DESC, STOCK_COUNT, SALE_COUNT, RATE_COUNT, 
    SKIM_COUNT, INCREASE_COUNT, FAV_COUNT, MIN_BUY, MAX_BUY, MAX_POINT, MARKET_PRICE, 
    PUTAWAY_PRICE, PUTAWAY_FLAG, SKU_TYPE, GOODS_IMG, POINT_BACK_TYPE, POINT_AMT, POST_FEE, 
    POST_SECOND, INSTALL_FEE, ADD_TIME, UPDATE_TIME, SOURCE_TYPE, REMARK, AUDIT_ID, AUDIT_NAME, 
    AUDIT_STATUS, REFUSE_REASON, AUDIT_TIME, IS_PROMOTION, GROUP_PRICE, ADD_CART, PAY_TYPE, 
    PROVIDE_PRICE, EARN, GROUP_GOODS, IS_HOT_EXCHANGE, DELT_FLAG
    from dcdg_goods_goods_base
    where GOODS_ID = #{goodsId,jdbcType=CHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Aug 12 16:23:35 CST 2019.
    -->
    select GOODS_ID, GOODS_TYPE, CAT_ID, CAT_PATH, BRAND_ID, SHOP_ID, SUSER_ID, SUSER_NAME, 
    GOODS_NAME, IS_HOT, IS_NEW, IS_REC, GOODS_DESC, STOCK_COUNT, SALE_COUNT, RATE_COUNT, 
    SKIM_COUNT, INCREASE_COUNT, FAV_COUNT, MIN_BUY, MAX_BUY, MAX_POINT, MARKET_PRICE, 
    PUTAWAY_PRICE, PUTAWAY_FLAG, SKU_TYPE, GOODS_IMG, POINT_BACK_TYPE, POINT_AMT, POST_FEE, 
    POST_SECOND, INSTALL_FEE, ADD_TIME, UPDATE_TIME, SOURCE_TYPE, REMARK, AUDIT_ID, AUDIT_NAME, 
    AUDIT_STATUS, REFUSE_REASON, AUDIT_TIME, IS_PROMOTION, GROUP_PRICE, ADD_CART, PAY_TYPE, 
    PROVIDE_PRICE, EARN, GROUP_GOODS, IS_HOT_EXCHANGE, DELT_FLAG
    from dcdg_goods_goods_base
  </select>

    <resultMap id="GoodsListCountMap" type="com.louquanapp.dao.model.Goods">
        <result column="putOnShelfCount" jdbcType="INTEGER" property="putOnShelfCount" />
        <result column="putOutShelCount" jdbcType="INTEGER" property="putOutShelCount" />
        <result column="toBeAuditedCount" jdbcType="INTEGER" property="toBeAuditedCount" />
    </resultMap>

    <sql id="shortCol">
        GOODS_ID, GOODS_TYPE,  BRAND_ID, SHOP_ID,
        GOODS_NAME, STOCK_COUNT, SALE_COUNT, RATE_COUNT,
        SKIM_COUNT, INCREASE_COUNT, FAV_COUNT, MIN_BUY, MAX_BUY, MAX_POINT, MARKET_PRICE,
        PUTAWAY_PRICE, PUTAWAY_FLAG, SKU_TYPE, GOODS_IMG, POINT_AMT, POST_FEE,
        POST_SECOND, INSTALL_FEE, ADD_TIME, SOURCE_TYPE,AUDIT_STATUS

    </sql>
    <select id="selectShort" resultMap="BaseResultMap">
        select
        <include refid="shortCol" />
        from dcdg_goods_goods_base
        where GOODS_ID = #{goodsId,jdbcType=CHAR}
    </select>


    <update id="addGoodSkipCountByGoodsId" parameterType="java.lang.String">
        update dcdg_goods_goods_base set SKIM_COUNT=SKIM_COUNT+1  where GOODS_ID = #{goodsId,jdbcType=CHAR}
    </update>

    <select id="selectGoodsImgAndCatPathAndGoodsNameAndPutawayFlagByPrimaryKey" resultMap="BaseResultMap">
         select  GOODS_IMG,CAT_PATH,GOODS_NAME,PUTAWAY_FLAG ,AUDIT_STATUS ,GOODS_DESC from dcdg_goods_goods_base where GOODS_ID = #{goodsId,jdbcType=CHAR}

    </select>
    <select id="selectShopIdById" resultType="String">
         select  SHOP_ID from dcdg_goods_goods_base where GOODS_ID = #{goodsId,jdbcType=CHAR}

    </select>

    <select id="maxPostFee" parameterType="java.util.List" resultType="double">
        select max(POST_FEE) from dcdg_goods_goods_base
        WHERE AUDIT_STATUS=4 AND PUTAWAY_FLAG=4
        <if test="list != null and list.size()&gt;0">
            AND GOODS_ID in
            <foreach close=")" collection="list" item="id" open="(" separator=",">#{id}
            </foreach>
        </if>
    </select>


    <select id="searchGoods" resultMap="BaseResultMap">
        select GOODS_ID,SALE_COUNT,SHOP_ID,CAT_ID,
        GOODS_NAME, IS_HOT, IS_NEW, IS_REC, MAX_POINT, MARKET_PRICE,
        PUTAWAY_PRICE, GOODS_IMG,SKU_TYPE,GOODS_DESC
        FROM dcdg_goods_goods_base
        where AUDIT_STATUS=4 AND PUTAWAY_FLAG=4
        <if test="isPromotion!=null ">
            AND IS_PROMOTION = #{isPromotion,jdbcType=TINYINT}
        </if>
        <if test="goodsIds != null and goodsIds.size()&gt;0">
            AND GOODS_ID in
            <foreach close=")" collection="goodsIds" item="id" open="(" separator=",">#{id}
            </foreach>
        </if>

        <if test="null!=brandIds and brandIds.size()&gt;0">
            AND BRAND_ID in
            <foreach close=")" collection="brandIds" item="id" open="(" separator=",">#{id}
            </foreach>
        </if>
        <if test="catIds != null and catIds.size()&gt;0">
            AND
            <foreach close=")" collection="catIds" item="id" open="(" separator=" or ">CAT_PATH like CONCAT('%,',#{id,jdbcType=VARCHAR},'%')
            </foreach>
        </if>

        <if test="catPath != null and catPath !=''">
            AND CAT_PATH=#{catPath,jdbcType=VARCHAR}
        </if>
        <if test="catPathLike != null and catPathLike !=''">
            AND CAT_PATH like CONCAT('%,',#{catPathLike,jdbcType=VARCHAR},'%')
        </if>

        <if test="goodsName != null and goodsName !=''">
            AND GOODS_NAME=#{goodsName,jdbcType=VARCHAR}
        </if>
        <if test="goodsNameLike != null and goodsNameLike !=''">
            AND GOODS_NAME like CONCAT('%',#{goodsNameLike,jdbcType=VARCHAR},'%')
        </if>
        <if test="isHot != null">
            AND IS_HOT=#{isHot,jdbcType=TINYINT}
        </if>
        <if test="isNew != null">
            AND IS_NEW=#{isNew,jdbcType=TINYINT}
        </if>
        <if test="isRec != null">
            AND IS_REC=#{isRec,jdbcType=TINYINT}
        </if>
        <if test="putawayPrice != null">
            AND PUTAWAY_PRICE=#{putawayPrice,jdbcType=DOUBLE}
        </if>
        <if test="putawayFlag != null">
            AND PUTAWAY_FLAG=#{putawayFlag,jdbcType=TINYINT}
        </if>
        <if test="beginPutawayPrice!= null">
            AND PUTAWAY_PRICE<![CDATA[   >=  ]]>#{beginPutawayPrice,jdbcType=DOUBLE}
        </if>
        <if test="endPutawayPrice != null">
            AND PUTAWAY_PRICE<![CDATA[   <  ]]> #{endPutawayPrice,jdbcType=DOUBLE}
        </if>
        <if test="auditStatus != null">
            AND AUDIT_STATUS=#{auditStatus,jdbcType=TINYINT}
        </if>

        <if test="shopId != null and shopId!=''">
            AND SHOP_ID=#{shopId,jdbcType=VARCHAR}
        </if>


    </select>

    <select id="queryGoodsRec" resultMap="BaseResultMap">
      select GOODS_ID,GOODS_IMG,GOODS_NAME,PUTAWAY_PRICE,MAX_POINT from dcdg_goods_goods_base
        where IS_REC=1 and PUTAWAY_FLAG=4 and AUDIT_STATUS=4  ORDER BY UPDATE_TIME   DESC limit 3
    </select>
    <!--查询热门兑换推荐商品-->
    <select id="queryGoodsIsHotExchange" resultMap="BaseResultMap">
        select distinct a.GOODS_ID,a.SALE_COUNT,a.SHOP_ID,a.CAT_ID,
        a.GOODS_NAME, a.IS_HOT, a.IS_NEW, a.IS_REC, a.MAX_POINT, a.MARKET_PRICE,
        a.PUTAWAY_PRICE, a.GOODS_IMG,a.SKU_TYPE,a.GOODS_DESC
        FROM dcdg_goods_goods_base a left join dcdg_goods_goods_sku b  on a.GOODS_ID=b.GOODS_ID
        where a.AUDIT_STATUS=4 AND a.PUTAWAY_FLAG=4 and  b.IS_POINT =1
        <if test="isPromotion!=null ">
            AND a.IS_PROMOTION = #{isPromotion,jdbcType=TINYINT}
        </if>
        <if test="goodsIds != null and goodsIds.size()&gt;0">
            AND a.GOODS_ID in
            <foreach close=")" collection="goodsIds" item="id" open="(" separator=",">#{id}
            </foreach>
        </if>

        <if test="null!=brandIds and brandIds.size()&gt;0">
            AND a.BRAND_ID in
            <foreach close=")" collection="brandIds" item="id" open="(" separator=",">#{id}
            </foreach>
        </if>
        <if test="catIds != null and catIds.size()&gt;0">
            AND
            <foreach close=")" collection="catIds" item="id" open="(" separator=" or ">a.CAT_PATH like CONCAT('%,',#{id,jdbcType=VARCHAR},'%')
            </foreach>
        </if>

        <if test="catPath != null and catPath !=''">
            AND a.CAT_PATH=#{catPath,jdbcType=VARCHAR}
        </if>
        <if test="catPathLike != null and catPathLike !=''">
            AND a.CAT_PATH like CONCAT('%,',#{catPathLike,jdbcType=VARCHAR},'%')
        </if>

        <if test="goodsName != null and goodsName !=''">
            AND a.GOODS_NAME=#{goodsName,jdbcType=VARCHAR}
        </if>
        <if test="goodsNameLike != null and goodsNameLike !=''">
            AND a.GOODS_NAME like CONCAT('%',#{goodsNameLike,jdbcType=VARCHAR},'%')
        </if>
        <if test="isHot != null">
            AND a.IS_HOT=#{isHot,jdbcType=TINYINT}
        </if>
        <if test="isNew != null">
            AND a.IS_NEW=#{isNew,jdbcType=TINYINT}
        </if>
        <if test="isRec != null">
            AND a.IS_REC=#{isRec,jdbcType=TINYINT}
        </if>
        <if test="putawayPrice != null">
            AND a.PUTAWAY_PRICE=#{putawayPrice,jdbcType=DOUBLE}
        </if>
        <if test="putawayFlag != null">
            AND a.PUTAWAY_FLAG=#{putawayFlag,jdbcType=TINYINT}
        </if>
        <if test="beginPutawayPrice!= null">
            AND a.PUTAWAY_PRICE<![CDATA[   >=  ]]>#{beginPutawayPrice,jdbcType=DOUBLE}
        </if>
        <if test="endPutawayPrice != null">
            AND a.PUTAWAY_PRICE<![CDATA[   <  ]]> #{endPutawayPrice,jdbcType=DOUBLE}
        </if>
        <if test="auditStatus != null">
            AND a.AUDIT_STATUS=#{auditStatus,jdbcType=TINYINT}
        </if>

        <if test="shopId != null and shopId!=''">
            AND a.SHOP_ID=#{shopId,jdbcType=VARCHAR}
        </if>
    </select>
    
    <!--扣减库存-->
    <update id="deductionStockCountForGoods">
        update dcdg_goods_goods_base set STOCK_COUNT =STOCK_COUNT-#{goodsNum,jdbcType=INTEGER},SALE_COUNT = SALE_COUNT+#{goodsNum,jdbcType=INTEGER}
        where GOODS_ID = #{goodsId,jdbcType=CHAR}  and  STOCK_COUNT &gt;= #{goodsNum,jdbcType=INTEGER}
    </update>

    <!--增加库存-->
    <update id="deductionStockCountForGoodsAdd">
        update dcdg_goods_goods_base set STOCK_COUNT =STOCK_COUNT+#{goodsNum,jdbcType=INTEGER},SALE_COUNT = SALE_COUNT-#{goodsNum,jdbcType=INTEGER}
        where GOODS_ID = #{goodsId,jdbcType=CHAR}
    </update>



   <!--查询商品列表-->
    <select id="queryGoodsByFlay" resultMap="BaseResultMap">
        select  GOODS_ID,GOODS_NAME,GOODS_IMG,STOCK_COUNT,SALE_COUNT,PUTAWAY_PRICE,PUTAWAY_FLAG,SKU_TYPE from dcdg_goods_goods_base

        <where>
            and SHOP_ID =  #{shopId,jdbcType=CHAR}
            and DELT_FLAG = 1
            <if test="flay !=null and flay == 2">
              and PUTAWAY_FLAG = 4 and AUDIT_STATUS = 4
            </if>
            <if test="flay !=null and flay == 3">
                and PUTAWAY_FLAG = 3
            </if>
            <if test="flay !=null and flay == 4">
                and AUDIT_STATUS = 2
            </if>
        </where>

    </select>

    <!--查询商品列表数量-->
    <select id="queryGoodsByFlayCount" resultMap="GoodsListCountMap">
        select

             (
                select  count(1) from dcdg_goods_goods_base  where SHOP_ID =  #{shopId,jdbcType=CHAR} and PUTAWAY_FLAG = 4  and DELT_FLAG = 1
             ) as putOnShelfCount
             ,(
                select  count(1) from dcdg_goods_goods_base  where SHOP_ID =  #{shopId,jdbcType=CHAR} and PUTAWAY_FLAG = 3  and DELT_FLAG = 1
             ) as putOutShelCount
             ,(
                select  count(1) from dcdg_goods_goods_base  where SHOP_ID =  #{shopId,jdbcType=CHAR} and AUDIT_STATUS = 2 and DELT_FLAG = 1
             ) as toBeAuditedCount



    </select>
    <!--商品上下架操作-->
    <update id="updateGoodsPutawayFlag">
        update dcdg_goods_goods_base  set PUTAWAY_FLAG = #{putawayFlag,jdbcType=TINYINT}
            where SHOP_ID =  #{shopId,jdbcType=CHAR} and GOODS_ID = #{goodsId,jdbcType=CHAR}
    </update>
    <!--商品删除-->
    <update id="updateGoodsDelt">
        update dcdg_goods_goods_base  set DELT_FLAG = 2
            where SHOP_ID =  #{shopId,jdbcType=CHAR} and GOODS_ID = #{goodsId,jdbcType=CHAR}
    </update>
</mapper>