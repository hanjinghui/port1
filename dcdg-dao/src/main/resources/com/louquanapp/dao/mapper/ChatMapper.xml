<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.louquanapp.dao.mapper.ChatMapper">
  <resultMap id="BaseResultMap" type="com.louquanapp.dao.model.Chat">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 23 16:31:42 CST 2019.
    -->
    <id column="CHAT_ID" jdbcType="CHAR" property="chatId" />
    <result column="CUST_ID" jdbcType="CHAR" property="custId" />
    <result column="FRIEND_ID" jdbcType="CHAR" property="friendId" />
    <result column="CHAT_STATUS" jdbcType="TINYINT" property="chatStatus" />
    <result column="ADD_TIME" jdbcType="TIMESTAMP" property="addTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="FRIENT_REMARK" jdbcType="VARCHAR" property="frientRemark" />
    <result column="CHAT_PHONE" jdbcType="VARCHAR" property="chatPhone" />
    <result column="CHAT_DESCRIBE" jdbcType="VARCHAR" property="chatDescribe" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 23 16:31:42 CST 2019.
    -->
    delete from dcdg_basic_chat_base
    where CHAT_ID = #{chatId,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.louquanapp.dao.model.Chat">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 23 16:31:42 CST 2019.
    -->
    insert into dcdg_basic_chat_base (CHAT_ID, CUST_ID, FRIEND_ID, 
      CHAT_STATUS, ADD_TIME, UPDATE_TIME, 
      FRIENT_REMARK, CHAT_PHONE, CHAT_DESCRIBE
      )
    values (#{chatId,jdbcType=CHAR}, #{custId,jdbcType=CHAR}, #{friendId,jdbcType=CHAR}, 
      #{chatStatus,jdbcType=TINYINT}, #{addTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{frientRemark,jdbcType=VARCHAR}, #{chatPhone,jdbcType=VARCHAR}, #{chatDescribe,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.louquanapp.dao.model.Chat">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 23 16:31:42 CST 2019.
    -->
    update dcdg_basic_chat_base
    set CUST_ID = #{custId,jdbcType=CHAR},
      FRIEND_ID = #{friendId,jdbcType=CHAR},
      CHAT_STATUS = #{chatStatus,jdbcType=TINYINT},
      ADD_TIME = #{addTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      FRIENT_REMARK = #{frientRemark,jdbcType=VARCHAR},
      CHAT_PHONE = #{chatPhone,jdbcType=VARCHAR},
      CHAT_DESCRIBE = #{chatDescribe,jdbcType=VARCHAR}
    where CHAT_ID = #{chatId,jdbcType=CHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 23 16:31:42 CST 2019.
    -->
    select CHAT_ID, CUST_ID, FRIEND_ID, CHAT_STATUS, ADD_TIME, UPDATE_TIME, FRIENT_REMARK, 
    CHAT_PHONE, CHAT_DESCRIBE
    from dcdg_basic_chat_base
    where CHAT_ID = #{chatId,jdbcType=CHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Apr 23 16:31:42 CST 2019.
    -->
    select CHAT_ID, CUST_ID, FRIEND_ID, CHAT_STATUS, ADD_TIME, UPDATE_TIME, FRIENT_REMARK, 
    CHAT_PHONE, CHAT_DESCRIBE
    from dcdg_basic_chat_base
  </select>

    <resultMap extends="BaseResultMap" id="BaseResultExtraMap" type="com.louquanapp.dao.model.Chat">
        <result column="NICK_NAME" jdbcType="VARCHAR" property="nickName" />
        <result column="HEAD_IMG" jdbcType="VARCHAR" property="headImg" />
        <result column="REMARK" jdbcType="VARCHAR" property="remark" />
        <result column="AREA_PATH" jdbcType="VARCHAR" property="areaPath" />
        <result column="CUST_PHONE" jdbcType="VARCHAR" property="custPhone" />

    </resultMap>

    <!--修改聊天好友信息-->
    <update id="updateChat" parameterType="com.louquanapp.dao.model.Chat">
        update dcdg_basic_chat_base
        <set>
            <if test="custId != null and custId != '' ">
                CUST_ID = #{custId,jdbcType=VARCHAR},
            </if>
            <if test="friendId != null and friendId != '' ">
                FRIEND_ID = #{friendId,jdbcType=VARCHAR},
            </if>
            <if test="chatStatus != null">
                CHAT_STATUS = #{chatStatus,jdbcType=TINYINT},
            </if>
            <if test="frientRemark != null and frientRemark != '' ">
                FRIENT_REMARK = #{frientRemark,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
            </if>

        </set>
        where CHAT_ID = #{chatId,jdbcType=CHAR}

    </update>

    <!--修改聊天好友的状态 备注 更新时间-->
    <update id="updateStatusAndFrientRemarkAndUpdateForChat" parameterType="com.louquanapp.dao.model.Chat">
        update dcdg_basic_chat_base
        <set>
            <if test="chatStatus != null">
                CHAT_STATUS = #{chatStatus,jdbcType=TINYINT},
            </if>
            <if test="updateTime != null">
                UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="frientRemark != null and frientRemark != '' ">
                FRIENT_REMARK = #{frientRemark,jdbcType=VARCHAR},
            </if>


            <if test="chatPhone != null and chatPhone != '' ">
                CHAT_PHONE = #{chatPhone,jdbcType=VARCHAR},
            </if>
            <if test="chatDescribe != null and chatDescribe != '' ">
                CHAT_DESCRIBE = #{chatDescribe,jdbcType=VARCHAR},
            </if>

        </set>
        where CHAT_ID = #{chatId,jdbcType=CHAR}
        <if test="custId != null and custId != '' ">
         and CUST_ID = #{custId,jdbcType=CHAR}
        </if>
    </update>
    <!--查询新朋友列表-->
    <select id="selectNewFriends" resultMap="BaseResultExtraMap">
  select  a.CHAT_ID ,a.CUST_ID   FRIEND_ID,a.CHAT_PHONE,a.CHAT_DESCRIBE    ,a.CHAT_STATUS ,b.NICK_NAME,b.HEAD_IMG    from dcdg_basic_chat_base a left join
    dcdg_bussiness_customer_base b on a.CUST_ID =b.cust_id
    WHERE a.CHAT_STATUS !=2
    and a.FRIEND_ID=  #{custId,jdbcType=VARCHAR}
    order by a.CHAT_STATUS  desc , a.ADD_TIME desc
    limit 10
  </select>

    <!--查询朋友列表-->
    <select id="selectFriends" resultMap="BaseResultExtraMap">
  select  a.CHAT_ID,a.FRIEND_ID,a.FRIENT_REMARK,a.CHAT_STATUS ,b.NICK_NAME,b.HEAD_IMG    from dcdg_basic_chat_base a left join
    dcdg_bussiness_customer_base b on a.FRIEND_ID =b.cust_id
    WHERE a.CHAT_STATUS =1
         and a.CUST_ID=  #{custId,jdbcType=VARCHAR}
  </select>

    <!--根据 custId friendId  chatStatus=3 查询 chatId -->
    <select id="queryChatIdChatByCustIdAndFriendIdAndChatStatus" resultType="String">
      select  CHAT_ID   from
            dcdg_basic_chat_base
      where CHAT_STATUS=3 and CUST_ID =  #{custId,jdbcType=CHAR}
        and FRIEND_ID =  #{friendId,jdbcType=CHAR}
  </select>


    <!--查询聊天好友详情-->
    <select id="datailFriend" resultMap="BaseResultExtraMap">
 select  a.CHAT_ID ,a.FRIENT_REMARK,b.CUST_PHONE  as CHAT_PHONE,b.NICK_NAME ,b.AREA_PATH ,b.REMARK,b.HEAD_IMG from
            dcdg_basic_chat_base a  left join    dcdg_bussiness_customer_base b on a.FRIEND_ID=b.CUST_ID
      where a.CHAT_STATUS=1  and a.CUST_ID =  #{custId,jdbcType=CHAR}  and a.FRIEND_ID = #{friendId,jdbcType=CHAR}
  </select>

   <!-- 删除聊天好友用户关系-->
    <delete id="delChatCustId">
        delete  from dcdg_basic_chat_base   where chat_id = #{chatId,jdbcType=CHAR}
        and cust_id = #{custId,jdbcType=CHAR}

    </delete>
    <!--删除聊天好友朋友关系-->
    <delete id="delChatFriendId">
        delete  from dcdg_basic_chat_base   where CUST_ID = #{custId,jdbcType=CHAR}
        and FRIEND_ID = #{friendId,jdbcType=CHAR}   and CHAT_STATUS =1

    </delete>

    <!--查询好友关系-->
    <select id="queryChatStatus"  resultMap="BaseResultMap">
        select CHAT_ID,CHAT_STATUS,FRIENT_REMARK  from  dcdg_basic_chat_base where CUST_ID = #{custId,jdbcType=CHAR}
        and FRIEND_ID = #{friendId,jdbcType=CHAR}

    </select>

    <!--查询好友关系是否存在-->
    <select id="existChatRelation"  resultType="java.lang.Integer">
        select count(CHAT_ID)  from  dcdg_basic_chat_base where CUST_ID = #{custId,jdbcType=CHAR}
        and FRIEND_ID = #{friendId,jdbcType=CHAR}  and CHAT_STATUS =1

    </select>

    <!--查询黑名单列表-->
    <select id="chatBlacklists"  resultMap="BaseResultExtraMap">
        select a.CHAT_ID,a.FRIEND_ID,a.FRIENT_REMARK,b.HEAD_IMG, b.NICK_NAME from  dcdg_basic_chat_base a
            left join dcdg_bussiness_customer_base b on a.FRIEND_ID = b.CUST_ID
        where a.CUST_ID = #{custId,jdbcType=CHAR} and   a.CHAT_STATUS =2
    </select>

    <!--批量修改聊天好友的状态-->
    <update id="updateChatStatus" parameterType="com.louquanapp.dao.model.Chat">
        update dcdg_basic_chat_base
        set
                CHAT_STATUS = #{chatStatus,jdbcType=TINYINT}
        where CUST_ID = #{custId,jdbcType=CHAR}
       and   CHAT_ID    in
        <foreach collection="list" item="id" open="(" separator=","
                 close=")">#{id}
        </foreach>
    </update>

</mapper>