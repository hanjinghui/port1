<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.louquanapp.dao.mapper.OrderEvaluateMapper">
  <resultMap id="BaseResultMap" type="com.louquanapp.dao.model.OrderEvaluate">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 26 15:57:53 CST 2019.
    -->
    <id column="EVALUATE_ID" jdbcType="CHAR" property="evaluateId" />
    <result column="ORDER_ID" jdbcType="CHAR" property="orderId" />
    <result column="CHILD_ID" jdbcType="CHAR" property="childId" />
    <result column="GOODS_ID" jdbcType="CHAR" property="goodsId" />
    <result column="IS_ANONY" jdbcType="TINYINT" property="isAnony" />
    <result column="EVALUATE_RESULT" jdbcType="TINYINT" property="evaluateResult" />
    <result column="EVALUATE_SCORE" jdbcType="INTEGER" property="evaluateScore" />
    <result column="DELIVER_SCORE" jdbcType="INTEGER" property="deliverScore" />
    <result column="DESC_SCORE" jdbcType="INTEGER" property="descScore" />
    <result column="SELLER_ID" jdbcType="CHAR" property="sellerId" />
    <result column="SELLER_NAME" jdbcType="VARCHAR" property="sellerName" />
    <result column="BUYER_ID" jdbcType="CHAR" property="buyerId" />
    <result column="BUYER_NAME" jdbcType="VARCHAR" property="buyerName" />
    <result column="EVALUATE_CONT" jdbcType="VARCHAR" property="evaluateCont" />
    <result column="ADD_TIME" jdbcType="TIMESTAMP" property="addTime" />
    <result column="REPLY_CONT" jdbcType="VARCHAR" property="replyCont" />
    <result column="REPLY_TIME" jdbcType="TIMESTAMP" property="replyTime" />
    <result column="EVALUATE_APPEND" jdbcType="VARCHAR" property="evaluateAppend" />
    <result column="APPEND_TIME" jdbcType="TIMESTAMP" property="appendTime" />
    <result column="SKU_VAL" jdbcType="VARCHAR" property="skuVal" />
    <result column="EVALUATE_IMG" jdbcType="VARCHAR" property="evaluateImg" />
    <result column="PLAN_ID" jdbcType="CHAR" property="planId" />
    <result column="EVALUATE_TYPE" jdbcType="TINYINT" property="evaluateType" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 26 15:57:53 CST 2019.
    -->
    delete from dcdg_bussiness_order_evaluate
    where EVALUATE_ID = #{evaluateId,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.louquanapp.dao.model.OrderEvaluate">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 26 15:57:53 CST 2019.
    -->
    insert into dcdg_bussiness_order_evaluate (EVALUATE_ID, ORDER_ID, CHILD_ID, 
      GOODS_ID, IS_ANONY, EVALUATE_RESULT, 
      EVALUATE_SCORE, DELIVER_SCORE, DESC_SCORE, 
      SELLER_ID, SELLER_NAME, BUYER_ID, 
      BUYER_NAME, EVALUATE_CONT, ADD_TIME, 
      REPLY_CONT, REPLY_TIME, EVALUATE_APPEND, 
      APPEND_TIME, SKU_VAL, EVALUATE_IMG, 
      PLAN_ID, EVALUATE_TYPE)
    values (#{evaluateId,jdbcType=CHAR}, #{orderId,jdbcType=CHAR}, #{childId,jdbcType=CHAR}, 
      #{goodsId,jdbcType=CHAR}, #{isAnony,jdbcType=TINYINT}, #{evaluateResult,jdbcType=TINYINT}, 
      #{evaluateScore,jdbcType=INTEGER}, #{deliverScore,jdbcType=INTEGER}, #{descScore,jdbcType=INTEGER}, 
      #{sellerId,jdbcType=CHAR}, #{sellerName,jdbcType=VARCHAR}, #{buyerId,jdbcType=CHAR}, 
      #{buyerName,jdbcType=VARCHAR}, #{evaluateCont,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP}, 
      #{replyCont,jdbcType=VARCHAR}, #{replyTime,jdbcType=TIMESTAMP}, #{evaluateAppend,jdbcType=VARCHAR}, 
      #{appendTime,jdbcType=TIMESTAMP}, #{skuVal,jdbcType=VARCHAR}, #{evaluateImg,jdbcType=VARCHAR}, 
      #{planId,jdbcType=CHAR}, #{evaluateType,jdbcType=TINYINT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.louquanapp.dao.model.OrderEvaluate">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 26 15:57:53 CST 2019.
    -->
    update dcdg_bussiness_order_evaluate
    set ORDER_ID = #{orderId,jdbcType=CHAR},
      CHILD_ID = #{childId,jdbcType=CHAR},
      GOODS_ID = #{goodsId,jdbcType=CHAR},
      IS_ANONY = #{isAnony,jdbcType=TINYINT},
      EVALUATE_RESULT = #{evaluateResult,jdbcType=TINYINT},
      EVALUATE_SCORE = #{evaluateScore,jdbcType=INTEGER},
      DELIVER_SCORE = #{deliverScore,jdbcType=INTEGER},
      DESC_SCORE = #{descScore,jdbcType=INTEGER},
      SELLER_ID = #{sellerId,jdbcType=CHAR},
      SELLER_NAME = #{sellerName,jdbcType=VARCHAR},
      BUYER_ID = #{buyerId,jdbcType=CHAR},
      BUYER_NAME = #{buyerName,jdbcType=VARCHAR},
      EVALUATE_CONT = #{evaluateCont,jdbcType=VARCHAR},
      ADD_TIME = #{addTime,jdbcType=TIMESTAMP},
      REPLY_CONT = #{replyCont,jdbcType=VARCHAR},
      REPLY_TIME = #{replyTime,jdbcType=TIMESTAMP},
      EVALUATE_APPEND = #{evaluateAppend,jdbcType=VARCHAR},
      APPEND_TIME = #{appendTime,jdbcType=TIMESTAMP},
      SKU_VAL = #{skuVal,jdbcType=VARCHAR},
      EVALUATE_IMG = #{evaluateImg,jdbcType=VARCHAR},
      PLAN_ID = #{planId,jdbcType=CHAR},
      EVALUATE_TYPE = #{evaluateType,jdbcType=TINYINT}
    where EVALUATE_ID = #{evaluateId,jdbcType=CHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 26 15:57:53 CST 2019.
    -->
    select EVALUATE_ID, ORDER_ID, CHILD_ID, GOODS_ID, IS_ANONY, EVALUATE_RESULT, EVALUATE_SCORE, 
    DELIVER_SCORE, DESC_SCORE, SELLER_ID, SELLER_NAME, BUYER_ID, BUYER_NAME, EVALUATE_CONT, 
    ADD_TIME, REPLY_CONT, REPLY_TIME, EVALUATE_APPEND, APPEND_TIME, SKU_VAL, EVALUATE_IMG, 
    PLAN_ID, EVALUATE_TYPE
    from dcdg_bussiness_order_evaluate
    where EVALUATE_ID = #{evaluateId,jdbcType=CHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Sep 26 15:57:53 CST 2019.
    -->
    select EVALUATE_ID, ORDER_ID, CHILD_ID, GOODS_ID, IS_ANONY, EVALUATE_RESULT, EVALUATE_SCORE, 
    DELIVER_SCORE, DESC_SCORE, SELLER_ID, SELLER_NAME, BUYER_ID, BUYER_NAME, EVALUATE_CONT, 
    ADD_TIME, REPLY_CONT, REPLY_TIME, EVALUATE_APPEND, APPEND_TIME, SKU_VAL, EVALUATE_IMG, 
    PLAN_ID, EVALUATE_TYPE
    from dcdg_bussiness_order_evaluate
  </select>


    <select id="getOrderEvaluateByGoodsId" resultMap="BaseResultMap">
    select IS_ANONY, EVALUATE_RESULT, EVALUATE_SCORE,BUYER_ID,EVALUATE_CONT,
     BUYER_NAME,  ADD_TIME,CHILD_ID,EVALUATE_IMG
    from dcdg_bussiness_order_evaluate  where GOODS_ID = #{goodsId,jdbcType=CHAR}
  </select>
    <select id="getOrderEvaluateByGoodsIdNo" resultMap="BaseResultMap">
    select EVALUATE_ID
    from dcdg_bussiness_order_evaluate  where GOODS_ID = #{goodsId,jdbcType=CHAR}
  </select>


    <select id="childIds" resultType="String">
        select CHILD_ID
        from dcdg_bussiness_order_evaluate where SELLER_ID = #{sellerId,jdbcType=CHAR} AND CHILD_ID in
        <if test="list != null and list.size()&gt;0">
            <foreach close=")" collection="list" item="id" open="(" separator=",">#{id}
            </foreach>
        </if>
    </select>
    <select id="listOrderEvaluateByGoodsIdAndEvaluateResult" resultMap="BaseResultMap">
        select IS_ANONY, EVALUATE_RESULT, EVALUATE_SCORE,BUYER_ID,EVALUATE_CONT,
        BUYER_NAME, ADD_TIME,CHILD_ID,EVALUATE_IMG,REPLY_CONT,REPLY_TIME
        from dcdg_bussiness_order_evaluate where GOODS_ID = #{goodsId,jdbcType=CHAR}
        <if test="evaluateResult!= null and evaluateResult!=4  and evaluateResult!=0 and evaluateResult!=5 ">
            AND EVALUATE_RESULT = #{evaluateResult,jdbcType=TINYINT}
        </if>
        <if test="evaluateResult!= null and evaluateResult==4 ">
            AND ( EVALUATE_IMG !='' or EVALUATE_IMG is not null )
        </if>

    </select>

    <select id="getOrderEvaluateByGoodsIdOrderByAddTimeDesc" parameterType="java.util.Map" resultMap="BaseResultMap">
     select IS_ANONY, EVALUATE_RESULT, EVALUATE_SCORE,BUYER_ID,EVALUATE_CONT,
     BUYER_NAME,  ADD_TIME,CHILD_ID,EVALUATE_IMG,REPLY_CONT,REPLY_TIME
    from dcdg_bussiness_order_evaluate where GOODS_ID = #{goodsId,jdbcType=CHAR}
    order by ADD_TIME DESC limit 1
  </select>
    <select id="countOrderEvaluateByGoodsIdAndEvaluateResult" parameterType="java.util.Map" resultType="int">
        select count(1)
        from dcdg_bussiness_order_evaluate where GOODS_ID = #{goodsId,jdbcType=CHAR}
        <if test="evaluateResult!=4">
            AND EVALUATE_RESULT = #{evaluateResult,jdbcType=CHAR}
        </if>
        <if test="evaluateResult==4">
            AND ( EVALUATE_IMG !='' or EVALUATE_IMG is not null )
        </if>

    </select>

    <select id="countOrderEvaluateByCustIdAndEvaluateResult" parameterType="java.util.Map" resultType="int">
    select count(1)
    from dcdg_bussiness_order_evaluate where BUYER_ID = #{buyerId,jdbcType=CHAR}
        <if test="evaluateResult!=4">
            AND EVALUATE_RESULT = #{evaluateResult,jdbcType=CHAR}
        </if>
        <if test="evaluateResult==4">
            AND ( EVALUATE_IMG !='' or EVALUATE_IMG is not null )
        </if>
  </select>


    <select id="selectCountByOrderId" parameterType="java.lang.String" resultType="java.lang.Integer">
        select COUNT(1) from dcdg_bussiness_order_evaluate  where ORDER_ID = #{orderId,jdbcType=CHAR}
    </select>

    <select id="selectByChildIdAndBuyerId" resultMap="BaseResultMap">
    select IS_ANONY, EVALUATE_RESULT, EVALUATE_SCORE,BUYER_ID,EVALUATE_CONT,
     BUYER_NAME,  ADD_TIME,CHILD_ID,EVALUATE_IMG,REPLY_CONT,REPLY_TIME
    from dcdg_bussiness_order_evaluate
    where CHILD_ID = #{childId,jdbcType=CHAR} AND  BUYER_ID = #{buyerId,jdbcType=CHAR}
  </select>

    <resultMap extends="BaseResultMap" id="ExtraBaseResultMap" type="com.louquanapp.dao.model.OrderEvaluate">
        <result column="GOODS_IMG" jdbcType="VARCHAR" property="goodsImg" />
        <result column="GOODS_NAME" jdbcType="VARCHAR" property="goodsName" />
        <result column="SKU_VALUE" jdbcType="VARCHAR" property="skuValue" />
        <result column="PUTAWAY_PRICE" jdbcType="DOUBLE" property="putawayPrice" />

        <result column="NICK_NAME" jdbcType="VARCHAR" property="nickName" />
        <result column="HEAD_IMG" jdbcType="VARCHAR" property="headImg" />
    </resultMap>

    <select id="myListOrderEvaluateByGoodsIdAndEvaluateResult" resultMap="ExtraBaseResultMap">
        select a.IS_ANONY, a.EVALUATE_RESULT, a.EVALUATE_SCORE,a.BUYER_ID,a.EVALUATE_CONT,
        a.BUYER_NAME, a.ADD_TIME,a.CHILD_ID,a.EVALUATE_IMG,a.REPLY_CONT,a.REPLY_TIME
        ,c.GOODS_IMG
        ,c.GOODS_NAME
        ,c.SKU_VALUE
        ,c.PUTAWAY_PRICE
        from dcdg_bussiness_order_evaluate a
        LEFT JOIN dcdg_bussiness_order_item c on a.CHILD_ID=c.CHILD_ID
        where a.BUYER_ID = #{custId,jdbcType=CHAR}
        <if test="evaluateResult!= null and evaluateResult==1 and evaluateResult !=0  ">
            AND ( a.EVALUATE_IMG !='' or a.EVALUATE_IMG is not null )
        </if>

    </select>

    <!--是否回复[1-全部 2-未回复 3-已回复]-->
    <select id="evaluateList" resultMap="ExtraBaseResultMap">
        SELECT b.CUST_ID,b.NICK_NAME,b.HEAD_IMG
        ,a.EVALUATE_RESULT,a.ADD_TIME,a.EVALUATE_ID
        ,a.EVALUATE_CONT,a.ORDER_ID,a.REPLY_CONT
        FROM       `dcdg_bussiness_order_evaluate` a
        left join dcdg_bussiness_customer_base b on a.BUYER_ID = b.CUST_ID
        where a.SELLER_ID = #{shopId,jdbcType=CHAR}
        <if test="isReply != null and isReply == 2">
            and a.REPLY_CONT is null
        </if>
        <if test="isReply != null and isReply == 3">
            and a.REPLY_CONT is not null
        </if>

    </select>

    <select id="evaluateDetail" resultMap="ExtraBaseResultMap">
        SELECT b.CUST_ID,b.NICK_NAME,b.HEAD_IMG
        ,a.EVALUATE_RESULT,a.ADD_TIME,a.EVALUATE_ID
        ,a.EVALUATE_CONT,a.ORDER_ID,a.REPLY_CONT,a.CHILD_ID
        FROM       `dcdg_bussiness_order_evaluate` a
        left join dcdg_bussiness_customer_base b on a.BUYER_ID = b.CUST_ID
        where a.EVALUATE_ID = #{evaluateId,jdbcType=CHAR}  and a.SELLER_ID = #{shopId,jdbcType=CHAR}
    </select>

    <update id="replyEvaluate">
        update dcdg_bussiness_order_evaluate set  REPLY_CONT = #{replyCont,jdbcType=VARCHAR},REPLY_TIME = now()
        where EVALUATE_ID = #{evaluateId,jdbcType=CHAR} and SELLER_ID = #{shopId,jdbcType=CHAR}
    </update>

</mapper>