<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.louquanapp.dao.mapper.OrderMapper">
  <resultMap id="BaseResultMap" type="com.louquanapp.dao.model.Order">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 29 17:04:42 CST 2019.
    -->
    <id column="ORDER_ID" jdbcType="CHAR" property="orderId" />
    <result column="SHOP_ID" jdbcType="CHAR" property="shopId" />
    <result column="SHOP_NAME" jdbcType="VARCHAR" property="shopName" />
    <result column="SHOP_TITLE" jdbcType="VARCHAR" property="shopTitle" />
    <result column="AUTH_TYPE" jdbcType="INTEGER" property="authType" />
    <result column="ORDER_NO" jdbcType="VARCHAR" property="orderNo" />
    <result column="CUST_ID" jdbcType="CHAR" property="custId" />
    <result column="CUST_NAME" jdbcType="VARCHAR" property="custName" />
    <result column="ORDER_STATUS" jdbcType="INTEGER" property="orderStatus" />
    <result column="ORDER_FEE" jdbcType="DOUBLE" property="orderFee" />
    <result column="MAX_POINT" jdbcType="DOUBLE" property="maxPoint" />
    <result column="TOTAL_FEE" jdbcType="DOUBLE" property="totalFee" />
    <result column="POST_FEE" jdbcType="DOUBLE" property="postFee" />
    <result column="INSTALL_FEE" jdbcType="DOUBLE" property="installFee" />
    <result column="DISCOUNTS_FEE" jdbcType="DOUBLE" property="discountsFee" />
    <result column="DISCOUNTS_DESC" jdbcType="VARCHAR" property="discountsDesc" />
    <result column="REFUND_FEE" jdbcType="DOUBLE" property="refundFee" />
    <result column="GOODS_NUM" jdbcType="INTEGER" property="goodsNum" />
    <result column="RMB_AMT" jdbcType="DOUBLE" property="rmbAmt" />
    <result column="CONSUME_AMT" jdbcType="DOUBLE" property="consumeAmt" />
    <result column="CXY_AMT" jdbcType="DOUBLE" property="cxyAmt" />
    <result column="DEDUCTION_AMT" jdbcType="DOUBLE" property="deductionAmt" />
    <result column="PAY_TYPE" jdbcType="TINYINT" property="payType" />
    <result column="POST_INFO" jdbcType="VARCHAR" property="postInfo" />
    <result column="ORDER_PROB" jdbcType="VARCHAR" property="orderProb" />
    <result column="ORDER_SOURCE" jdbcType="TINYINT" property="orderSource" />
    <result column="ORDER_REMARK" jdbcType="VARCHAR" property="orderRemark" />
    <result column="ANONY_FLAG" jdbcType="TINYINT" property="anonyFlag" />
    <result column="ADD_TIME" jdbcType="TIMESTAMP" property="addTime" />
    <result column="PAY_TIME" jdbcType="TIMESTAMP" property="payTime" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="OVERDUE_TIME" jdbcType="TIMESTAMP" property="overdueTime" />
    <result column="SENDER_NAME" jdbcType="VARCHAR" property="senderName" />
    <result column="CURRENCY_STATUS" jdbcType="TINYINT" property="currencyStatus" />
    <result column="IN_SETTLEMENT_TIME" jdbcType="TIMESTAMP" property="inSettlementTime" />
    <result column="OUT_SETTLEMENT_TIME" jdbcType="TIMESTAMP" property="outSettlementTime" />
    <result column="RELEASE_FLAG" jdbcType="TINYINT" property="releaseFlag" />
    <result column="POINT_TIMES" jdbcType="INTEGER" property="pointTimes" />
    <result column="DUE_POINT" jdbcType="DOUBLE" property="duePoint" />
    <result column="SURPLUS_POINT" jdbcType="DOUBLE" property="surplusPoint" />
    <result column="SEND_RULE" jdbcType="VARCHAR" property="sendRule" />
    <result column="RETURN_CASH" jdbcType="DOUBLE" property="returnCash" />
    <result column="DELT_FLAG" jdbcType="TINYINT" property="deltFlag" />
    <result column="RECHARGE_INFO" jdbcType="VARCHAR" property="rechargeInfo" />
    <result column="OFFLINEPAY_IMG" jdbcType="VARCHAR" property="offlinepayImg" />
    <result column="IS_PROMOTION" jdbcType="TINYINT" property="isPromotion" />
    <result column="OFFLINE_NUM" jdbcType="VARCHAR" property="offlineNum" />
    <result column="PLAN_EAT_TIME" jdbcType="TIMESTAMP" property="planEatTime" />
    <result column="WRITE_OFF_IMG" jdbcType="VARCHAR" property="writeOffImg" />
    <result column="SEND_TIME" jdbcType="TIMESTAMP" property="sendTime" />
    <result column="RECEIVING_TIME" jdbcType="TIMESTAMP" property="receivingTime" />
    <result column="REFUND_SETTLEMENT_STATUS" jdbcType="TINYINT" property="refundSettlementStatus" />
    <result column="IN_REFUND_SETTLEMENT_TIME" jdbcType="TIMESTAMP" property="inRefundSettlementTime" />
    <result column="OUT_REFUND_SETTLEMENT_TIME" jdbcType="TIMESTAMP" property="outRefundSettlementTime" />
    <result column="OUT_REFUND_TIME" jdbcType="TIMESTAMP" property="outRefundTime" />
  </resultMap>
    <resultMap id="ExtraBaseMap" extends="BaseResultMap" type="com.louquanapp.dao.model.Order">
        <result column="dataType" jdbcType="TINYINT" property="dataType" />
        <result column="GOODS_IMG" jdbcType="VARCHAR" property="goodsImg" />
        <result column="GOODS_NAME" jdbcType="VARCHAR" property="goodsName" />
        <result column="NICK_NAME" jdbcType="VARCHAR" property="nickName" />
        <result column="SKU_GOODS_NAME" jdbcType="VARCHAR" property="skuGoodsName" />
        <result column="num" jdbcType="DOUBLE" property="num" />
        <result column="time" jdbcType="VARCHAR" property="time" />
    </resultMap>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 29 17:04:42 CST 2019.
    -->
    delete from dcdg_bussiness_order_base
    where ORDER_ID = #{orderId,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.louquanapp.dao.model.Order">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 29 17:04:42 CST 2019.
    -->
    insert into dcdg_bussiness_order_base (ORDER_ID, SHOP_ID, SHOP_NAME, 
      SHOP_TITLE, AUTH_TYPE, ORDER_NO, 
      CUST_ID, CUST_NAME, ORDER_STATUS, 
      ORDER_FEE, MAX_POINT, TOTAL_FEE, 
      POST_FEE, INSTALL_FEE, DISCOUNTS_FEE, 
      DISCOUNTS_DESC, REFUND_FEE, GOODS_NUM, 
      RMB_AMT, CONSUME_AMT, CXY_AMT, 
      DEDUCTION_AMT, PAY_TYPE, POST_INFO, 
      ORDER_PROB, ORDER_SOURCE, ORDER_REMARK, 
      ANONY_FLAG, ADD_TIME, PAY_TIME, 
      UPDATE_TIME, OVERDUE_TIME, SENDER_NAME, 
      CURRENCY_STATUS, IN_SETTLEMENT_TIME, OUT_SETTLEMENT_TIME, 
      RELEASE_FLAG, POINT_TIMES, DUE_POINT, 
      SURPLUS_POINT, SEND_RULE, RETURN_CASH, 
      DELT_FLAG, RECHARGE_INFO, OFFLINEPAY_IMG, 
      IS_PROMOTION, OFFLINE_NUM, PLAN_EAT_TIME, 
      WRITE_OFF_IMG, SEND_TIME, RECEIVING_TIME, 
      REFUND_SETTLEMENT_STATUS, IN_REFUND_SETTLEMENT_TIME, 
      OUT_REFUND_SETTLEMENT_TIME, OUT_REFUND_TIME
      )
    values (#{orderId,jdbcType=CHAR}, #{shopId,jdbcType=CHAR}, #{shopName,jdbcType=VARCHAR}, 
      #{shopTitle,jdbcType=VARCHAR}, #{authType,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR}, 
      #{custId,jdbcType=CHAR}, #{custName,jdbcType=VARCHAR}, #{orderStatus,jdbcType=INTEGER}, 
      #{orderFee,jdbcType=DOUBLE}, #{maxPoint,jdbcType=DOUBLE}, #{totalFee,jdbcType=DOUBLE}, 
      #{postFee,jdbcType=DOUBLE}, #{installFee,jdbcType=DOUBLE}, #{discountsFee,jdbcType=DOUBLE}, 
      #{discountsDesc,jdbcType=VARCHAR}, #{refundFee,jdbcType=DOUBLE}, #{goodsNum,jdbcType=INTEGER}, 
      #{rmbAmt,jdbcType=DOUBLE}, #{consumeAmt,jdbcType=DOUBLE}, #{cxyAmt,jdbcType=DOUBLE}, 
      #{deductionAmt,jdbcType=DOUBLE}, #{payType,jdbcType=TINYINT}, #{postInfo,jdbcType=VARCHAR}, 
      #{orderProb,jdbcType=VARCHAR}, #{orderSource,jdbcType=TINYINT}, #{orderRemark,jdbcType=VARCHAR}, 
      #{anonyFlag,jdbcType=TINYINT}, #{addTime,jdbcType=TIMESTAMP}, #{payTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{overdueTime,jdbcType=TIMESTAMP}, #{senderName,jdbcType=VARCHAR}, 
      #{currencyStatus,jdbcType=TINYINT}, #{inSettlementTime,jdbcType=TIMESTAMP}, #{outSettlementTime,jdbcType=TIMESTAMP}, 
      #{releaseFlag,jdbcType=TINYINT}, #{pointTimes,jdbcType=INTEGER}, #{duePoint,jdbcType=DOUBLE}, 
      #{surplusPoint,jdbcType=DOUBLE}, #{sendRule,jdbcType=VARCHAR}, #{returnCash,jdbcType=DOUBLE}, 
      #{deltFlag,jdbcType=TINYINT}, #{rechargeInfo,jdbcType=VARCHAR}, #{offlinepayImg,jdbcType=VARCHAR}, 
      #{isPromotion,jdbcType=TINYINT}, #{offlineNum,jdbcType=VARCHAR}, #{planEatTime,jdbcType=TIMESTAMP}, 
      #{writeOffImg,jdbcType=VARCHAR}, #{sendTime,jdbcType=TIMESTAMP}, #{receivingTime,jdbcType=TIMESTAMP}, 
      #{refundSettlementStatus,jdbcType=TINYINT}, #{inRefundSettlementTime,jdbcType=TIMESTAMP}, 
      #{outRefundSettlementTime,jdbcType=TIMESTAMP}, #{outRefundTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.louquanapp.dao.model.Order">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 29 17:04:42 CST 2019.
    -->
    update dcdg_bussiness_order_base
    set SHOP_ID = #{shopId,jdbcType=CHAR},
      SHOP_NAME = #{shopName,jdbcType=VARCHAR},
      SHOP_TITLE = #{shopTitle,jdbcType=VARCHAR},
      AUTH_TYPE = #{authType,jdbcType=INTEGER},
      ORDER_NO = #{orderNo,jdbcType=VARCHAR},
      CUST_ID = #{custId,jdbcType=CHAR},
      CUST_NAME = #{custName,jdbcType=VARCHAR},
      ORDER_STATUS = #{orderStatus,jdbcType=INTEGER},
      ORDER_FEE = #{orderFee,jdbcType=DOUBLE},
      MAX_POINT = #{maxPoint,jdbcType=DOUBLE},
      TOTAL_FEE = #{totalFee,jdbcType=DOUBLE},
      POST_FEE = #{postFee,jdbcType=DOUBLE},
      INSTALL_FEE = #{installFee,jdbcType=DOUBLE},
      DISCOUNTS_FEE = #{discountsFee,jdbcType=DOUBLE},
      DISCOUNTS_DESC = #{discountsDesc,jdbcType=VARCHAR},
      REFUND_FEE = #{refundFee,jdbcType=DOUBLE},
      GOODS_NUM = #{goodsNum,jdbcType=INTEGER},
      RMB_AMT = #{rmbAmt,jdbcType=DOUBLE},
      CONSUME_AMT = #{consumeAmt,jdbcType=DOUBLE},
      CXY_AMT = #{cxyAmt,jdbcType=DOUBLE},
      DEDUCTION_AMT = #{deductionAmt,jdbcType=DOUBLE},
      PAY_TYPE = #{payType,jdbcType=TINYINT},
      POST_INFO = #{postInfo,jdbcType=VARCHAR},
      ORDER_PROB = #{orderProb,jdbcType=VARCHAR},
      ORDER_SOURCE = #{orderSource,jdbcType=TINYINT},
      ORDER_REMARK = #{orderRemark,jdbcType=VARCHAR},
      ANONY_FLAG = #{anonyFlag,jdbcType=TINYINT},
      ADD_TIME = #{addTime,jdbcType=TIMESTAMP},
      PAY_TIME = #{payTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      OVERDUE_TIME = #{overdueTime,jdbcType=TIMESTAMP},
      SENDER_NAME = #{senderName,jdbcType=VARCHAR},
      CURRENCY_STATUS = #{currencyStatus,jdbcType=TINYINT},
      IN_SETTLEMENT_TIME = #{inSettlementTime,jdbcType=TIMESTAMP},
      OUT_SETTLEMENT_TIME = #{outSettlementTime,jdbcType=TIMESTAMP},
      RELEASE_FLAG = #{releaseFlag,jdbcType=TINYINT},
      POINT_TIMES = #{pointTimes,jdbcType=INTEGER},
      DUE_POINT = #{duePoint,jdbcType=DOUBLE},
      SURPLUS_POINT = #{surplusPoint,jdbcType=DOUBLE},
      SEND_RULE = #{sendRule,jdbcType=VARCHAR},
      RETURN_CASH = #{returnCash,jdbcType=DOUBLE},
      DELT_FLAG = #{deltFlag,jdbcType=TINYINT},
      RECHARGE_INFO = #{rechargeInfo,jdbcType=VARCHAR},
      OFFLINEPAY_IMG = #{offlinepayImg,jdbcType=VARCHAR},
      IS_PROMOTION = #{isPromotion,jdbcType=TINYINT},
      OFFLINE_NUM = #{offlineNum,jdbcType=VARCHAR},
      PLAN_EAT_TIME = #{planEatTime,jdbcType=TIMESTAMP},
      WRITE_OFF_IMG = #{writeOffImg,jdbcType=VARCHAR},
      SEND_TIME = #{sendTime,jdbcType=TIMESTAMP},
      RECEIVING_TIME = #{receivingTime,jdbcType=TIMESTAMP},
      REFUND_SETTLEMENT_STATUS = #{refundSettlementStatus,jdbcType=TINYINT},
      IN_REFUND_SETTLEMENT_TIME = #{inRefundSettlementTime,jdbcType=TIMESTAMP},
      OUT_REFUND_SETTLEMENT_TIME = #{outRefundSettlementTime,jdbcType=TIMESTAMP},
      OUT_REFUND_TIME = #{outRefundTime,jdbcType=TIMESTAMP}
    where ORDER_ID = #{orderId,jdbcType=CHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 29 17:04:42 CST 2019.
    -->
    select ORDER_ID, SHOP_ID, SHOP_NAME, SHOP_TITLE, AUTH_TYPE, ORDER_NO, CUST_ID, CUST_NAME, 
    ORDER_STATUS, ORDER_FEE, MAX_POINT, TOTAL_FEE, POST_FEE, INSTALL_FEE, DISCOUNTS_FEE, 
    DISCOUNTS_DESC, REFUND_FEE, GOODS_NUM, RMB_AMT, CONSUME_AMT, CXY_AMT, DEDUCTION_AMT, 
    PAY_TYPE, POST_INFO, ORDER_PROB, ORDER_SOURCE, ORDER_REMARK, ANONY_FLAG, ADD_TIME, 
    PAY_TIME, UPDATE_TIME, OVERDUE_TIME, SENDER_NAME, CURRENCY_STATUS, IN_SETTLEMENT_TIME, 
    OUT_SETTLEMENT_TIME, RELEASE_FLAG, POINT_TIMES, DUE_POINT, SURPLUS_POINT, SEND_RULE, 
    RETURN_CASH, DELT_FLAG, RECHARGE_INFO, OFFLINEPAY_IMG, IS_PROMOTION, OFFLINE_NUM, 
    PLAN_EAT_TIME, WRITE_OFF_IMG, SEND_TIME, RECEIVING_TIME, REFUND_SETTLEMENT_STATUS, 
    IN_REFUND_SETTLEMENT_TIME, OUT_REFUND_SETTLEMENT_TIME, OUT_REFUND_TIME
    from dcdg_bussiness_order_base
    where ORDER_ID = #{orderId,jdbcType=CHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Thu Aug 29 17:04:42 CST 2019.
    -->
    select ORDER_ID, SHOP_ID, SHOP_NAME, SHOP_TITLE, AUTH_TYPE, ORDER_NO, CUST_ID, CUST_NAME, 
    ORDER_STATUS, ORDER_FEE, MAX_POINT, TOTAL_FEE, POST_FEE, INSTALL_FEE, DISCOUNTS_FEE, 
    DISCOUNTS_DESC, REFUND_FEE, GOODS_NUM, RMB_AMT, CONSUME_AMT, CXY_AMT, DEDUCTION_AMT, 
    PAY_TYPE, POST_INFO, ORDER_PROB, ORDER_SOURCE, ORDER_REMARK, ANONY_FLAG, ADD_TIME, 
    PAY_TIME, UPDATE_TIME, OVERDUE_TIME, SENDER_NAME, CURRENCY_STATUS, IN_SETTLEMENT_TIME, 
    OUT_SETTLEMENT_TIME, RELEASE_FLAG, POINT_TIMES, DUE_POINT, SURPLUS_POINT, SEND_RULE, 
    RETURN_CASH, DELT_FLAG, RECHARGE_INFO, OFFLINEPAY_IMG, IS_PROMOTION, OFFLINE_NUM, 
    PLAN_EAT_TIME, WRITE_OFF_IMG, SEND_TIME, RECEIVING_TIME, REFUND_SETTLEMENT_STATUS, 
    IN_REFUND_SETTLEMENT_TIME, OUT_REFUND_SETTLEMENT_TIME, OUT_REFUND_TIME
    from dcdg_bussiness_order_base
  </select>


    <select id="orderDetailByOrderIdAndCustId" resultMap="BaseResultMap">
        select ORDER_ID,ORDER_NO,
        ORDER_STATUS, ORDER_FEE, TOTAL_FEE, POST_FEE,POST_INFO, INSTALL_FEE, DISCOUNTS_FEE,
        REFUND_FEE, GOODS_NUM, RMB_AMT, CONSUME_AMT, CXY_AMT, DEDUCTION_AMT, PAY_TYPE,
        ADD_TIME, PAY_TIME, UPDATE_TIME,
        OVERDUE_TIME,   RMB_AMT,
        SURPLUS_POINT, SEND_RULE, RETURN_CASH, DELT_FLAG,OFFLINEPAY_IMG,ORDER_REMARK,IS_PROMOTION
        from dcdg_bussiness_order_base where CUST_ID=#{custId,jdbcType=CHAR}
        AND  ORDER_ID = #{orderId,jdbcType=CHAR} AND DELT_FLAG=1
    </select>

    <select id="orderDetailByOrderIdsAndShopId" resultMap="BaseResultMap">
        select ORDER_ID,ORDER_NO,SHOP_ID, SHOP_NAME,CUST_ID,
        ORDER_STATUS, ORDER_FEE, TOTAL_FEE, POST_FEE,POST_INFO, INSTALL_FEE, DISCOUNTS_FEE,
        REFUND_FEE, GOODS_NUM, RMB_AMT, CONSUME_AMT, CXY_AMT, DEDUCTION_AMT,PAY_TYPE,SEND_TIME,RECEIVING_TIME,
        ADD_TIME, PAY_TIME, UPDATE_TIME,
        OVERDUE_TIME, CURRENCY_STATUS, RELEASE_FLAG, DUE_POINT,
        SURPLUS_POINT, SEND_RULE, RETURN_CASH, DELT_FLAG,OFFLINEPAY_IMG,MAX_POINT,IS_PROMOTION,ORDER_REMARK,PLAN_EAT_TIME
        from dcdg_bussiness_order_base where SHOP_ID=#{shopId,jdbcType=CHAR}
        <if test="orderIds != null and orderIds.size()&gt;0">
            AND ORDER_ID IN
            <foreach close=")" collection="orderIds" item="id" open="(" separator=",">#{id}
            </foreach>
        </if>
        AND DELT_FLAG=1
    </select>

    <select id="selectOrderStatusByOrderNo" parameterType="java.lang.String" resultMap="BaseResultMap">
   select ORDER_ID, ORDER_NO,  CUST_ID,
        CUST_NAME, ORDER_STATUS, PAY_TYPE, ADD_TIME, PAY_TIME, UPDATE_TIME, ORDER_SOURCE,
        ORDER_REMARK, ORDER_FEE, REFUND_FEE, DELT_FLAG
    from dcdg_bussiness_order_base WHERE ORDER_NO = #{orderNo,jdbcType=CHAR} AND DELT_FLAG=1
  </select>

    <select id="selectOrderStatusByOrderId" parameterType="java.lang.String" resultType="java.lang.Integer">
   select ORDER_STATUS
    from dcdg_bussiness_order_base WHERE ORDER_ID = #{orderId,jdbcType=CHAR} AND DELT_FLAG=1
  </select>

    <select id="selectOrderStatusShopIdAndShopNameByOrderId" parameterType="java.lang.String" resultMap="BaseResultMap">
   select ORDER_STATUS,SHOP_ID,SHOP_NAME,IS_PROMOTION
    from dcdg_bussiness_order_base WHERE ORDER_ID = #{orderId,jdbcType=CHAR} AND DELT_FLAG=1
  </select>

    <update id="updateOrderStatusAndCustIdAndUpdateTime">
        update dcdg_bussiness_order_base
        set
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
        ORDER_STATUS = #{orderStatus,jdbcType=INTEGER}
        where ORDER_ID = #{orderId,jdbcType=CHAR} AND CUST_ID = #{custId,jdbcType=CHAR} AND ORDER_STATUS=#{oriOrderStatus,jdbcType=INTEGER} AND DELT_FLAG=1
    </update>

    <select id="getOrderIdsByOrderNo" resultType="String">
         select ORDER_ID  from dcdg_bussiness_order_base WHERE ORDER_NO = #{orderNo,jdbcType=CHAR} AND DELT_FLAG=1
    </select>


    <select id="selectByPrimaryKeyLock" parameterType="java.lang.String" resultMap="BaseResultMap">
        select ORDER_ID, ORDER_NO, CUST_ID, CUST_NAME,GOODS_NUM,
        ORDER_STATUS, ORDER_FEE, TOTAL_FEE, POST_FEE, INSTALL_FEE, DISCOUNTS_FEE, DISCOUNTS_DESC,
        REFUND_FEE,  RMB_AMT, CONSUME_AMT, DEDUCTION_AMT,
         ADD_TIME, PAY_TIME, UPDATE_TIME,RECHARGE_INFO,MAX_POINT,IS_PROMOTION,SHOP_ID,SHOP_NAME,ORDER_REMARK
        from dcdg_bussiness_order_base
        where ORDER_ID = #{orderId,jdbcType=CHAR}  FOR UPDATE
    </select>

    <!--订单支付成功 独享 -->
    <update id="updateOrderStatusAndRmbAmtAndUpdateTimeAndConsumeAmt">

        update dcdg_bussiness_order_base
        <set>
            RMB_AMT = #{rmbAmt,jdbcType=DOUBLE},
            UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
            ORDER_STATUS = #{orderStatus,jdbcType=INTEGER},
            PAY_TIME=#{updateTime,jdbcType=TIMESTAMP},
            PAY_TYPE = #{payType,jdbcType=TINYINT},
            CONSUME_AMT = #{consumeAmt,jdbcType=DOUBLE},
            DEDUCTION_AMT = #{deductionAmt,jdbcType=DOUBLE},
            OFFLINEPAY_IMG=#{serialNo,jdbcType=CHAR}
            where ORDER_ID = #{orderId,jdbcType=CHAR} and ORDER_STATUS=101
        </set>


    </update>


    <update id="updateDeductionAmtByOrderNo">
        update dcdg_bussiness_order_base
        set
        DEDUCTION_AMT = #{deductionAmt,jdbcType=DOUBLE}
        where ORDER_NO = #{orderNo,jdbcType=CHAR} and ORDER_STATUS=101
    </update>


    <select id="getOrderByCustIdAndAddTime" resultMap="BaseResultMap">
        select ORDER_ID,ORDER_NO,SHOP_NAME,
        ORDER_STATUS, ORDER_FEE, TOTAL_FEE, POST_FEE, DISCOUNTS_FEE,
        GOODS_NUM, RMB_AMT, CONSUME_AMT, CXY_AMT, DEDUCTION_AMT,
        ADD_TIME, PAY_TIME, UPDATE_TIME,OVERDUE_TIME,SEND_TIME,RECEIVING_TIME,

        SURPLUS_POINT, RETURN_CASH,IS_PROMOTION,ORDER_REMARK,IS_PROMOTION,POST_INFO
        from dcdg_bussiness_order_base where SHOP_ID = #{shopId,jdbcType=CHAR} AND DELT_FLAG=1

        <if test="beginAddTime != null">
            AND ADD_TIME<![CDATA[   >=  ]]>#{beginAddTime,jdbcType=TIMESTAMP}
        </if>
        <if test="endAddTime != null">
            AND ADD_TIME<![CDATA[   <  ]]>DATE_ADD(#{endAddTime,jdbcType=TIMESTAMP},INTERVAL
            1 DAY)
        </if>
        <if test="orderStatus != null">
            AND ORDER_STATUS in
            <foreach close=")" collection="orderStatus" item="id" open="(" separator=",">#{id}
            </foreach>
        </if>
        <if test="null!=isPromotion">
            AND
            IS_PROMOTION=#{isPromotion,jdbcType=TINYINT}

        </if>

    </select>


    <resultMap id="mapOrderStatusCountNum" type="java.util.HashMap">
        <result column="COUNT_NUM" jdbcType="INTEGER" property="countNum" />
        <result column="ORDER_STATUS" jdbcType="INTEGER" property="orderStatus" />
    </resultMap>


    <select id="getOrderStausByCustId" resultMap="mapOrderStatusCountNum">
        select ORDER_STATUS,count(*) AS COUNT_NUM from dcdg_bussiness_order_base where CUST_ID = #{custId,jdbcType=CHAR} AND DELT_FLAG=1
        GROUP BY ORDER_STATUS,CUST_ID
    </select>

    <!--根据id删除订单-->
    <update id="delOrderById">
        update  dcdg_bussiness_order_base
           set  UPDATE_TIME = now()
                ,DELT_FLAG = 2
        where  ORDER_ID = #{orderId,jdbcType=CHAR} and SHOP_ID = #{shopId,jdbcType=CHAR}

    </update>

    <update id="cancleOrderById">
        update  dcdg_bussiness_order_base
           set  UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
                ORDER_STATUS = 80,
                ORDER_PROB=#{orderProb},
                OFFLINE_NUM=#{returnMoney}
        where  ORDER_ID = #{orderId,jdbcType=CHAR}

    </update>


    <!--[101-未付款 201-已付款 301-退款申请中 311-退款成功 401-已发货 501-已收货 601-退货申请中 611-退货中 621-已退货 701-已评价 801-已追加评论 901-维权退款申请中 911-维权退款成功 80-订单取消]CXY_BUSSINESS_ORDER_BASE.ORDER_STATUS-->

    <select id="getSelledByCustId">
        select ORDER_ID,SHOP_NAME from dcdg_bussiness_order_base where ORDER_STATUS !=101 AND DELT_FLAG=1  and ORDER_STATUS!=80
        AND CUST_ID = #{custId,jdbcType=CHAR}
        AND  IS_PROMOTION=#{isPromotion,jdbcType=TINYINT}
    </select>

    <select id="queryOrderByOrderId" resultMap="BaseResultMap">
        select SHOP_ID,PLAN_EAT_TIME from dcdg_bussiness_order_base  where IS_PROMOTION = 1 and ORDER_STATUS = 201
         and ORDER_ID = #{orderId,jdbcType=CHAR}
         and CUST_ID = #{custId,jdbcType=CHAR}

    </select>

    <resultMap id="RespOrderInformationMap" type="com.louquanapp.dao.model.Order">
        <result column="dayMoney" jdbcType="DOUBLE" property="dayMoney" />
        <result column="weekOrdersCount" jdbcType="INTEGER" property="weekOrdersCount" />
        <result column="totalMoney" jdbcType="DOUBLE" property="totalMoney" />
        <result column="toSendOrdersCount" jdbcType="INTEGER" property="toSendOrdersCount" />
        <result column="refundApplicationOrdersCount" jdbcType="INTEGER" property="refundApplicationOrdersCount" />
        <result column="afterSaleCount" jdbcType="INTEGER" property="afterSaleCount" />
        <result column="planinfoCount" jdbcType="INTEGER" property="planinfoCount" />

    </resultMap>

    <!--`ORDER_STATUS` int(4) NOT NULL DEFAULT '101' COMMENT '订单状态[101-未付款 201-已付款 301-退款申请中 311-退款成功 401-已发货 501-已收货 601-退货申请中 611-退货中 621-已退货 701-已评价 801-已追加评论 901-维权退款申请中 911-维权退款成功 80-订单取消]',-->
    <select id="orderInformation" resultMap="RespOrderInformationMap">
        select   ifnull((select   sum(RMB_AMT) from dcdg_bussiness_order_base
                        where ORDER_STATUS &gt;= 201  and  ORDER_STATUS &lt;= 901 and PAY_TYPE = 4
                        and DELT_FLAG = 1
                        and SHOP_ID = #{shopId,jdbcType=CHAR}
                        and PAY_TIME &gt;= #{dayTimeBegin,jdbcType=VARCHAR}
                        and PAY_TIME &lt;= #{dayTimeEnd,jdbcType=VARCHAR}),0) as dayMoney

                ,ifnull((select   count(1) from dcdg_bussiness_order_base
                        where ORDER_STATUS &gt;= 201  and  ORDER_STATUS &lt;= 901
                        and DELT_FLAG = 1
                        and SHOP_ID = #{shopId,jdbcType=CHAR}
                        and PAY_TIME &gt;= #{weekTimeBegin,jdbcType=VARCHAR}
                        and PAY_TIME &lt;= #{weekTimeEnd,jdbcType=VARCHAR}),0) as weekOrdersCount

                ,ifnull((select sum(RMB_AMT) from dcdg_bussiness_order_base
                        where ORDER_STATUS &gt;= 201  and  ORDER_STATUS &lt;= 901 and PAY_TYPE = 4
                        and DELT_FLAG = 1
                        and SHOP_ID = #{shopId,jdbcType=CHAR}),0) as totalMoney

                ,ifnull((select   count(1) from dcdg_bussiness_order_base
                        where ORDER_STATUS = 201  and DELT_FLAG = 1
                        and SHOP_ID = #{shopId,jdbcType=CHAR}),0) as toSendOrdersCount

                ,ifnull((select   count(1) from dcdg_bussiness_order_base
                        where ORDER_STATUS = 301  and DELT_FLAG = 1
                        and SHOP_ID = #{shopId,jdbcType=CHAR}) ,0) as refundApplicationOrdersCount

                ,ifnull((select   count(1) from dcdg_bussiness_order_base
                        where ORDER_STATUS in( 301,601,611,901 )  and DELT_FLAG = 1
                        and SHOP_ID = #{shopId,jdbcType=CHAR}  and DELT_FLAG = 1) ,0) as afterSaleCount

                ,ifnull((select count(1) from dcdg_video_planinfo_base
                        where  SHOP_ID = #{shopId,jdbcType=CHAR}
                        and  PLAN_STATUS in(1) ) ,0) as planinfoCount
    </select>


    <!--修改订单地址-->
    <update id="updateAdress">
        update  dcdg_bussiness_order_base set  POST_INFO = #{postInfo}
        where  ORDER_ID = #{orderId,jdbcType=CHAR}
    </update>

    <select id="queryOrderPostInfoByOrderId" resultType="String">
        select POST_INFO from dcdg_bussiness_order_base  where  ORDER_ID = #{orderId,jdbcType=CHAR}
    </select>


    <update id="updateStatusForSendGoods">
        update dcdg_bussiness_order_base set SENDER_NAME = #{senderName,jdbcType=VARCHAR}
           ,ORDER_STATUS =  401 , SEND_TIME = now()   where  ORDER_ID = #{orderId,jdbcType=CHAR}
           and ORDER_STATUS = 201
    </update>


    <update id="updateStatusForserviceCompletion">
        update dcdg_bussiness_order_base set ORDER_STATUS =  501 , RECEIVING_TIME = now()
         where  ORDER_ID = #{orderId,jdbcType=CHAR}  and ORDER_STATUS = 201
    </update>

    <!--同意退货退款-->
    <update id="agreeAfterSale">
        update dcdg_bussiness_order_base set
         ORDER_STATUS = #{orderStatus,jdbcType=INTEGER}
        where ORDER_ID = #{orderId,jdbcType=CHAR}
  </update>
    <!--退货退款仅退款完成-->
    <update id="completeAfterSale">
        update dcdg_bussiness_order_base set
         ORDER_STATUS = 911,
         OUT_REFUND_TIME = now()
        where ORDER_ID = #{orderId,jdbcType=CHAR}
  </update>

   <!-- List<Order> walletList(@Param("currencyStatus") Byte currencyStatus,@Param("refundSettlementStatus") Byte refundSettlementStatus
    ,@Param("moneyType") Byte moneyType,@Param("month") String month);-->

    <!--钱包列表-->
    <select id="walletList" resultMap="ExtraBaseMap">
        select
            1 dataType
            ,SETTLE_ID ORDER_ID,MONEY_TYPE PAY_TYPE,null ORDER_STATUS,MONEY ORDER_FEE,MONEY MAX_POINT,OUT_SETTLEMENT_TIME RECEIVING_TIME
            ,SETTLEMENT_TYPE CURRENCY_STATUS,null IN_SETTLEMENT_TIME,null OUT_SETTLEMENT_TIME
            ,SETTLEMENT_STATUS REFUND_SETTLEMENT_STATUS,null IN_REFUND_SETTLEMENT_TIME,null OUT_REFUND_SETTLEMENT_TIME
            ,null OUT_REFUND_TIME
            ,null receivingSettlementTime
            ,null outRefundSettlementTime

         from dcdg_business_settlement_info
             where          SHOP_ID = #{shopId,jdbcType=CHAR}
                        and SETTLEMENT_STATUS = 4
                    <if test="moneyType!= null and moneyType !=3 ">
                        and MONEY_TYPE = #{moneyType}
                    </if>
                    <if test="monthBegin!= null and monthBegin != '' ">
                        and  OUT_SETTLEMENT_TIME &gt;= #{monthBegin}
                    </if>
                    <if test="monthEnd!= null and monthEnd != '' ">
                        and OUT_SETTLEMENT_TIME &lt;= #{monthEnd}
                    </if>
                    <if test="screen != null and screen == 1">
                        and SETTLEMENT_TYPE = 1  and SETTLEMENT_STATUS = 4
                    </if>
                    <if test="screen != null and screen == 2">
                        and !( SETTLEMENT_TYPE = 1  and SETTLEMENT_STATUS = 4)
                    </if>

        union

        select 2 dataType
            ,a.ORDER_ID,PAY_TYPE,a.ORDER_STATUS,a.ORDER_FEE,a.MAX_POINT,a.RECEIVING_TIME
            ,a.CURRENCY_STATUS,a.IN_SETTLEMENT_TIME,a.OUT_SETTLEMENT_TIME
            ,a.REFUND_SETTLEMENT_STATUS,a.IN_REFUND_SETTLEMENT_TIME,a.OUT_REFUND_SETTLEMENT_TIME
            ,a.OUT_REFUND_TIME
            ,a.receivingSettlementTime
            ,a.outRefundSettlementTime

        from (
                select ORDER_ID,PAY_TYPE,ORDER_STATUS,ORDER_FEE,MAX_POINT,RECEIVING_TIME
                ,CURRENCY_STATUS,IN_SETTLEMENT_TIME,OUT_SETTLEMENT_TIME
                ,REFUND_SETTLEMENT_STATUS,IN_REFUND_SETTLEMENT_TIME,OUT_REFUND_SETTLEMENT_TIME
                ,OUT_REFUND_TIME
                ,date_add(RECEIVING_TIME,interval 3 day)  receivingSettlementTime
                ,date_add(OUT_REFUND_TIME,interval 3 day)  outRefundSettlementTime

                from dcdg_bussiness_order_base  where SHOP_ID = #{shopId,jdbcType=CHAR}   and  (  (ORDER_STATUS =501 and
                date_add(RECEIVING_TIME,interval 3 day) &lt; now()) or (ORDER_STATUS =911 and
                date_add(OUT_REFUND_TIME,interval 3 day) &lt; now()))

        ) a
        <where>
            <if test="screen != null and screen == 1">
                and a.CURRENCY_STATUS = 4  and a.REFUND_SETTLEMENT_STATUS = 1
            </if>
            <if test="screen != null and screen == 2">
                and !(a.CURRENCY_STATUS = 4  and a.REFUND_SETTLEMENT_STATUS = 1)
            </if>
            <if test="moneyTypeList != null and moneyTypeList.size()>0">
                and a.PAY_TYPE in
                <foreach collection="moneyTypeList" item="id" open="(" separator=","
                         close=")">#{id}
                </foreach>
            </if>
            <if test="monthBegin!= null and monthBegin != '' ">
                and  a.receivingSettlementTime &gt;= #{monthBegin}
            </if>
            <if test="monthEnd!= null and monthEnd != '' ">
                and  a.receivingSettlementTime &lt;= #{monthEnd}
            </if>

        </where>

    </select>
  <!--  <if test="screen != null and screen == 1">
        and ( (a.CURRENCY_STATUS = 4  and a.REFUND_SETTLEMENT_STATUS = 1) or  (a.CURRENCY_STATUS = 4  and a.REFUND_SETTLEMENT_STATUS = 4) )
    </if>
    <if test="screen != null and screen == 2">
        and  ( (a.CURRENCY_STATUS  in (1,2,3)   and a.REFUND_SETTLEMENT_STATUS = 1) or  (  a.REFUND_SETTLEMENT_STATUS  in (1,2,3) and a.CURRENCY_STATUS = 4 ) )
    </if>-->


    <select id="earliestwalletMonth" resultType="java.util.Date">
        select
            min(a.receivingSettlementTime)
        from (
                select  date_add(RECEIVING_TIME,interval 3 day)  receivingSettlementTime
                    from dcdg_bussiness_order_base  where SHOP_ID = #{shopId,jdbcType=CHAR}   and  (  (ORDER_STATUS =501 and
                    date_add(RECEIVING_TIME,interval 3 day)  &lt; now()) or (ORDER_STATUS =911 and
                    date_add(OUT_REFUND_TIME,interval 3 day)  &lt; now()))
            ) a

    </select>

    <select id="totalMoney501" resultMap="BaseResultMap">
        select
        ifnull(sum(a.ORDER_FEE),0) ORDER_FEE , ifnull(sum(a.MAX_POINT),0) MAX_POINT
        from (
            select ORDER_FEE,MAX_POINT ,CURRENCY_STATUS from dcdg_bussiness_order_base
            where SHOP_ID = #{shopId,jdbcType=CHAR}   and  ORDER_STATUS =501 and
                date_add(RECEIVING_TIME,interval 3 day) &lt; now()  and CURRENCY_STATUS in(1,2)  and REFUND_SETTLEMENT_STATUS =1
        ) a
    </select>

    <select id="totalMoney911" resultMap="BaseResultMap">

        select
         ifnull(sum(a.ORDER_FEE),0) ORDER_FEE , ifnull(sum(a.MAX_POINT),0) MAX_POINT
        from (
            select ORDER_FEE,MAX_POINT from dcdg_bussiness_order_base
            where SHOP_ID = #{shopId,jdbcType=CHAR}   and  ORDER_STATUS =911 and
                date_add(OUT_REFUND_TIME,interval 3 day) &lt; now() and REFUND_SETTLEMENT_STATUS in(1,2)
                and CURRENCY_STATUS = 3
        ) a

    </select>


    <select id="querySettlementInfoOrderDetailByOrderIdAndShopId" resultMap="ExtraBaseMap">
        	select
                             a.ORDER_ID
                            ,a.SHOP_NAME
                            ,a.ORDER_FEE
                            ,a.MAX_POINT
                            ,a.PAY_TYPE
                            ,a.ADD_TIME
                            ,a.PAY_TIME
                            ,a.RECEIVING_TIME
                            ,a.CURRENCY_STATUS
                            ,a.REFUND_SETTLEMENT_STATUS


                            ,b.GOODS_NAME
                            ,b.GOODS_IMG

                            ,c.NICK_NAME

                            ,d.SKU_GOODS_NAME
				from
								      dcdg_bussiness_order_base     a
							left join dcdg_bussiness_order_item     b  	on a.ORDER_ID =b.ORDER_ID
							left join dcdg_bussiness_customer_base  c   on a.CUST_ID = c.CUST_ID
							left join dcdg_goods_goods_sku          d   on b.SKU_NO=d.SKU_ID


				where           a.ORDER_ID = #{orderId,jdbcType=CHAR}
							and a.SHOP_ID  = #{shopId,jdbcType=CHAR}
    </select>




<select id="salesStatistics" resultMap="ExtraBaseMap">

    <if test=" myType != null and myType == 1 ">
        select sum(a.ORDER_FEE) num,a.time,a.ADD_TIME  from (
            SELECT ORDER_FEE,DATE_FORMAT(`ADD_TIME`,'%j') time,ADD_TIME FROM dcdg_bussiness_order_base
            where
            ORDER_STATUS in (201,301,401,501,601,611,621,701,801,901)
            and PAY_TYPE in(4, 5)
            and SHOP_ID = #{shopId,jdbcType=CHAR}
            and ADD_TIME &gt;= #{beginTime}
            and ADD_TIME &lt;= #{endTime}
        ) a   group by a.time
    </if>

    <if test=" myType != null and myType == 2 ">
        select sum(a.ORDER_FEE) num,a.time,a.ADD_TIME  from (
            SELECT ORDER_FEE,DATE_FORMAT(`ADD_TIME`,'%u') time,ADD_TIME FROM dcdg_bussiness_order_base
            where
            ORDER_STATUS in (201,301,401,501,601,611,621,701,801,901)
            and PAY_TYPE in(4, 5)
            and SHOP_ID = #{shopId,jdbcType=CHAR}
            and ADD_TIME &gt;= #{beginTime}
            and ADD_TIME &lt;= #{endTime}
        ) a  group by a.time
    </if>

    <if test=" myType != null and myType == 3 ">
        select sum(a.ORDER_FEE) num,a.time,a.ADD_TIME  from (
            SELECT ORDER_FEE,DATE_FORMAT(`ADD_TIME`,'%m') time,ADD_TIME FROM dcdg_bussiness_order_base
            where
            ORDER_STATUS in (201,301,401,501,601,611,621,701,801,901)
            and PAY_TYPE in(4, 5)
            and SHOP_ID = #{shopId,jdbcType=CHAR}
            and ADD_TIME &gt;= #{beginTime}
            and ADD_TIME &lt;= #{endTime}
        ) a  group by a.time
    </if>
</select>

    <select id="SalesVolumeStatistics" resultMap="ExtraBaseMap">

        <if test=" myType != null and myType == 1 ">
            select count(a.ORDER_FEE) num,a.time,a.ADD_TIME  from (
            SELECT ORDER_FEE,DATE_FORMAT(`ADD_TIME`,'%j') time,ADD_TIME FROM dcdg_bussiness_order_base
            where
            ORDER_STATUS in (201,301,401,501,601,611,621,701,801,901)
            and PAY_TYPE in(4, 5)
            and SHOP_ID = #{shopId,jdbcType=CHAR}
            and ADD_TIME &gt;= #{beginTime}
            and ADD_TIME &lt;= #{endTime}
            ) a   group by a.time
        </if>

        <if test=" myType != null and myType == 2 ">
            select count(a.ORDER_FEE) num,a.time,a.ADD_TIME  from (
            SELECT ORDER_FEE,DATE_FORMAT(`ADD_TIME`,'%u') time,ADD_TIME FROM dcdg_bussiness_order_base
            where
            ORDER_STATUS in (201,301,401,501,601,611,621,701,801,901)
            and PAY_TYPE in(4, 5)
            and SHOP_ID = #{shopId,jdbcType=CHAR}
            and ADD_TIME &gt;= #{beginTime}
            and ADD_TIME &lt;= #{endTime}
            ) a  group by a.time
        </if>

        <if test=" myType != null and myType == 3 ">
            select count(a.ORDER_FEE) num,a.time,a.ADD_TIME  from (
            SELECT ORDER_FEE,DATE_FORMAT(`ADD_TIME`,'%m') time,ADD_TIME FROM dcdg_bussiness_order_base
            where
            ORDER_STATUS in (201,301,401,501,601,611,621,701,801,901)
            and PAY_TYPE in(4, 5)
            and SHOP_ID = #{shopId,jdbcType=CHAR}
            and ADD_TIME &gt;= #{beginTime}
            and ADD_TIME &lt;= #{endTime}
            ) a  group by a.time
        </if>
    </select>


    <select id="customerVolumeStatistics" resultMap="ExtraBaseMap">

        <if test=" myType != null and myType == 1 ">
            select count(a.CUST_ID) num,a.time,a.ADD_TIME  from (
                SELECT CUST_ID,DATE_FORMAT(`ADD_TIME`,'%j') time,ADD_TIME FROM dcdg_bussiness_order_base
                where
                ORDER_STATUS in (201,301,401,501,601,611,621,701,801,901)

                and SHOP_ID = #{shopId,jdbcType=CHAR}
                and ADD_TIME &gt;= #{beginTime}
                and ADD_TIME &lt;= #{endTime}

            ) a   group by a.time
        </if>

        <if test=" myType != null and myType == 2 ">
            select count(a.CUST_ID) num,a.time,a.ADD_TIME  from (
                SELECT CUST_ID,DATE_FORMAT(`ADD_TIME`,'%u') time,ADD_TIME FROM dcdg_bussiness_order_base
                where
                ORDER_STATUS in (201,301,401,501,601,611,621,701,801,901)

                and SHOP_ID = #{shopId,jdbcType=CHAR}
                and ADD_TIME &gt;= #{beginTime}
                and ADD_TIME &lt;= #{endTime}

            ) a  group by a.time
        </if>

        <if test=" myType != null and myType == 3 ">
            select count(a.CUST_ID) num,a.time,a.ADD_TIME  from (
                SELECT CUST_ID,DATE_FORMAT(`ADD_TIME`,'%m') time,ADD_TIME FROM dcdg_bussiness_order_base
                where
                ORDER_STATUS in (201,301,401,501,601,611,621,701,801,901)

                and SHOP_ID = #{shopId,jdbcType=CHAR}
                and ADD_TIME &gt;= #{beginTime}
                and ADD_TIME &lt;= #{endTime}

            ) a  group by a.time
        </if>
    </select>

</mapper>